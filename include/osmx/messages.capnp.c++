// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: messages.capnp

#include "messages.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<96> b_d67cff4a3d9aacf7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247, 172, 154,  61,  74, 255, 124, 214,
     28,   0,   0,   0,   1,   0,   3,   0,
     33,  52, 192, 169,  67, 232, 167, 211,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  77, 101, 116,  97,
    100,  97, 116,  97,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 103, 101, 115, 101,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 105, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d67cff4a3d9aacf7 = b_d67cff4a3d9aacf7.words;
#if !CAPNP_LITE
static const uint16_t m_d67cff4a3d9aacf7[] = {2, 1, 3, 4, 0};
static const uint16_t i_d67cff4a3d9aacf7[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d67cff4a3d9aacf7 = {
  0xd67cff4a3d9aacf7, b_d67cff4a3d9aacf7.words, 96, nullptr, m_d67cff4a3d9aacf7,
  0, 5, i_d67cff4a3d9aacf7, nullptr, nullptr, { &s_d67cff4a3d9aacf7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_b93919c4ec449690 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144, 150,  68, 236, 196,  25,  57, 185,
     28,   0,   0,   0,   1,   0,   0,   0,
     33,  52, 192, 169,  67, 232, 167, 211,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  78, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    247, 172, 154,  61,  74, 255, 124, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b93919c4ec449690 = b_b93919c4ec449690.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b93919c4ec449690[] = {
  &s_d67cff4a3d9aacf7,
};
static const uint16_t m_b93919c4ec449690[] = {1, 0};
static const uint16_t i_b93919c4ec449690[] = {0, 1};
const ::capnp::_::RawSchema s_b93919c4ec449690 = {
  0xb93919c4ec449690, b_b93919c4ec449690.words, 54, d_b93919c4ec449690, m_b93919c4ec449690,
  1, 2, i_b93919c4ec449690, nullptr, nullptr, { &s_b93919c4ec449690, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_cb94e7d0d750b6b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 182,  80, 215, 208, 231, 148, 203,
     28,   0,   0,   0,   1,   0,   0,   0,
     33,  52, 192, 169,  67, 232, 167, 211,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  87,  97, 121,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 100, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    247, 172, 154,  61,  74, 255, 124, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb94e7d0d750b6b5 = b_cb94e7d0d750b6b5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cb94e7d0d750b6b5[] = {
  &s_d67cff4a3d9aacf7,
};
static const uint16_t m_cb94e7d0d750b6b5[] = {2, 0, 1};
static const uint16_t i_cb94e7d0d750b6b5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cb94e7d0d750b6b5 = {
  0xcb94e7d0d750b6b5, b_cb94e7d0d750b6b5.words, 72, d_cb94e7d0d750b6b5, m_cb94e7d0d750b6b5,
  1, 3, i_cb94e7d0d750b6b5, nullptr, nullptr, { &s_cb94e7d0d750b6b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c4cbcf7bbc35ff81 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129, 255,  53, 188, 123, 207, 203, 196,
     28,   0,   0,   0,   1,   0,   2,   0,
     33,  52, 192, 169,  67, 232, 167, 211,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 108,  97,
    116, 105, 111, 110,  77, 101, 109,  98,
    101, 114,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    215, 112,  88, 105,   7, 148, 194, 184,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    215, 112,  88, 105,   7, 148, 194, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 108, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4cbcf7bbc35ff81 = b_c4cbcf7bbc35ff81.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c4cbcf7bbc35ff81[] = {
  &s_b8c29407695870d7,
};
static const uint16_t m_c4cbcf7bbc35ff81[] = {0, 2, 1};
static const uint16_t i_c4cbcf7bbc35ff81[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c4cbcf7bbc35ff81 = {
  0xc4cbcf7bbc35ff81, b_c4cbcf7bbc35ff81.words, 68, d_c4cbcf7bbc35ff81, m_c4cbcf7bbc35ff81,
  1, 3, i_c4cbcf7bbc35ff81, nullptr, nullptr, { &s_c4cbcf7bbc35ff81, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b8c29407695870d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 112,  88, 105,   7, 148, 194, 184,
     43,   0,   0,   0,   2,   0,   0,   0,
    129, 255,  53, 188, 123, 207, 203, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 108,  97,
    116, 105, 111, 110,  77, 101, 109,  98,
    101, 114,  46,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,   0,   0,   0,   0,
    119,  97, 121,   0,   0,   0,   0,   0,
    114, 101, 108,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8c29407695870d7 = b_b8c29407695870d7.words;
#if !CAPNP_LITE
static const uint16_t m_b8c29407695870d7[] = {0, 2, 1};
const ::capnp::_::RawSchema s_b8c29407695870d7 = {
  0xb8c29407695870d7, b_b8c29407695870d7.words, 33, nullptr, m_b8c29407695870d7,
  0, 3, nullptr, nullptr, nullptr, { &s_b8c29407695870d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_b8c29407695870d7, b8c29407695870d7);
static const ::capnp::_::AlignedData<73> b_cd53a3c262087d04 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 125,   8,  98, 194, 163,  83, 205,
     28,   0,   0,   0,   1,   0,   0,   0,
     33,  52, 192, 169,  67, 232, 167, 211,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101,  47,
    111, 115, 109, 120,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  46,  99,  97,
    112, 110, 112,  58,  82, 101, 108,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 109,  98, 101, 114, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129, 255,  53, 188, 123, 207, 203, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    247, 172, 154,  61,  74, 255, 124, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd53a3c262087d04 = b_cd53a3c262087d04.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cd53a3c262087d04[] = {
  &s_c4cbcf7bbc35ff81,
  &s_d67cff4a3d9aacf7,
};
static const uint16_t m_cd53a3c262087d04[] = {1, 2, 0};
static const uint16_t i_cd53a3c262087d04[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cd53a3c262087d04 = {
  0xcd53a3c262087d04, b_cd53a3c262087d04.words, 73, d_cd53a3c262087d04, m_cd53a3c262087d04,
  2, 3, i_cd53a3c262087d04, nullptr, nullptr, { &s_cd53a3c262087d04, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Metadata
constexpr uint16_t Metadata::_capnpPrivate::dataWordSize;
constexpr uint16_t Metadata::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Metadata::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Metadata::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Node
constexpr uint16_t Node::_capnpPrivate::dataWordSize;
constexpr uint16_t Node::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Node::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Node::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Way
constexpr uint16_t Way::_capnpPrivate::dataWordSize;
constexpr uint16_t Way::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Way::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Way::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RelationMember
constexpr uint16_t RelationMember::_capnpPrivate::dataWordSize;
constexpr uint16_t RelationMember::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RelationMember::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RelationMember::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Relation
constexpr uint16_t Relation::_capnpPrivate::dataWordSize;
constexpr uint16_t Relation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Relation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Relation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



